# Config file for automatic testing at travis-ci.org
dist: xenial
language: python
env:
  global:
    - COVERALLS_PARALLEL=true
matrix:
  fast_finish: true
  include:
    - name: Check code style
      python: 3.8
      env: TOXENV="run-blackcheck,run-isortcheck"
    - name: Docs
      python: 3.8
      env:
        - DOCS="true"
        # TODO: Doctr deploy key
        #       * Run `tox -e run-cmd -- doctr configure --no-upload-key --no-authenticate --keypath docs/doctr_deploy_key`
        #       * Follow doctr's instructions regarding setting up the deploy key on Github
        #       * Replace the "secure: ..." line below with the "secure" line printed by doctr
        # - secure: ...
        # TODO: Environment variables for deployment of documentation artifacts to Bintray
        #       * Set up a Bintray repo and package (preferably mirroring the username/repo name on Github
        #       * Uncomment lines and set values for:
        #           * BINTRAY_USER - The username for the Bintray account
        #           * BINTRAY_SUBJECT - The "subject" (user name or organization name) hosting the package
        #           * BINTRAY_REPO - The "repo" on Bintray (should match the git repo name)
        #           * BINTRAY_PACKAGE - The "package" on Bintray (should also match the git repo name)
        #       * run `tox -e run-travis-encrypt`
        #       * paste in e.g. "BINTRAY_TOKEN=0a23802f7c9907f9087e37f21346a3a2805feb1a" when prompted for "Password"
        #       * replace the "secure: ..." information below with the "secure" information printed by travis-encrypt
        # - BINTRAY_USER=qalgebra
        # - BINTRAY_SUBJECT=qalgebra
        # - BINTRAY_REPO=qalgebra
        # - BINTRAY_PACKAGE=qalgebra
        # # BINTRAY_TOKEN
        # - secure: ...
      addons:
        apt_packages:
          - pandoc
    - name: Python 3.8
      python: 3.8
      env: TOXENV=py38-test

install:
  # any failure stops the build
  - set -e
  - export PATH=/tmp/texlive/bin/x86_64-linux:$PATH
  - travis_wait source .travis/texlive/texlive_install.sh
  - pip install tox
  - if [[ "${DOCS}" == "true" ]]; then  pip install zip-files; fi
  - pip freeze
  - printenv
cache:
  directories:
    - /tmp/texlive
    - $HOME/.texlive
script:
  # any failure stops testing immediately
  - set -e
  - |
    if [[ "${DOCS}" == "true" ]]; then
      source .travis/doctr_build.sh
    else
      tox -e $TOXENV
    fi
  - echo "DONE"
after_success:
  # coveralls is prone to random failures (which would fail the Travis job), so we'll handle those silently
  - if [[ "${TOXENV}" =~ test ]]; then tox -e $(echo "${TOXENV}" | sed s/test/runcmd/) -- coveralls -v || echo "Cannot upload to coveralls"; fi
notifications:
  webhooks: https://coveralls.io/webhook
