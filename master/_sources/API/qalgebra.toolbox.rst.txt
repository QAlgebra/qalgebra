
:autogenerated:

qalgebra.toolbox package
========================

.. automodule:: qalgebra.toolbox
    


    Submodules:

    .. toctree::
       :maxdepth: 1

       qalgebra.toolbox.commutator_manipulation
       qalgebra.toolbox.core
       qalgebra.toolbox.equation



    Summary
    -------

    ``__all__`` Classes:


    .. list-table::
    
       * - :class:`Eq <qalgebra.toolbox.equation.Eq>`
         - Symbolic equation
    

    ``__all__`` Functions:


    .. list-table::
    
       * - :func:`expand_commutators_leibniz <qalgebra.toolbox.commutator_manipulation.expand_commutators_leibniz>`
         - Recursively expand commutators in `expr` according to the Leibniz rule.
       * - :func:`no_instance_caching <qalgebra.toolbox.core.no_instance_caching>`
         - Temporarily disable instance caching in :meth:`~.Expression.create`
       * - :func:`symbols <qalgebra.toolbox.core.symbols>`
         - The :func:`~sympy.core.symbol.symbols` function from SymPy.
       * - :func:`temporary_instance_cache <qalgebra.toolbox.core.temporary_instance_cache>`
         - Use a temporary cache for instances in :meth:`~.Expression.create`
       * - :func:`temporary_rules <qalgebra.toolbox.core.temporary_rules>`
         - Allow temporary modification of rules for :meth:`~.Expression.create`
    


