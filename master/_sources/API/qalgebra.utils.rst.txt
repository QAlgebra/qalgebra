
:autogenerated:

qalgebra.utils package
======================

.. automodule:: qalgebra.utils
    


    Submodules:

    .. toctree::
       :maxdepth: 1

       qalgebra.utils.check_rules
       qalgebra.utils.containers
       qalgebra.utils.indices
       qalgebra.utils.ordering
       qalgebra.utils.properties_for_args
       qalgebra.utils.singleton
       qalgebra.utils.testing
       qalgebra.utils.unicode



    Summary
    -------

    ``__all__`` Classes:


    .. list-table::
    
       * - :class:`FockIndex <qalgebra.utils.indices.FockIndex>`
         - Symbolic index labeling a basis state in a :class:`.LocalSpace`
       * - :class:`FockLabel <qalgebra.utils.indices.FockLabel>`
         - Symbolic label that evaluates to the label of a basis state
       * - :class:`IdxSym <qalgebra.utils.indices.IdxSym>`
         - Index symbol in an indexed sum or product.
       * - :class:`IndexOverFockSpace <qalgebra.utils.indices.IndexOverFockSpace>`
         - Index range over the integer indices of a :class:`.LocalSpace` basis
       * - :class:`IndexOverList <qalgebra.utils.indices.IndexOverList>`
         - Index over a list of explicit values
       * - :class:`IndexOverRange <qalgebra.utils.indices.IndexOverRange>`
         - Index over the inclusive range between two integers
       * - :class:`IntIndex <qalgebra.utils.indices.IntIndex>`
         - A symbolic label that evaluates to an integer.
       * - :class:`Singleton <qalgebra.utils.singleton.Singleton>`
         - Metaclass for singletons.
       * - :class:`SpinIndex <qalgebra.utils.indices.SpinIndex>`
         - Symbolic label for a spin degree of freedom
       * - :class:`StrLabel <qalgebra.utils.indices.StrLabel>`
         - Symbolic label that evaluates to a string
    

    ``__all__`` Functions:


    .. list-table::
    
       * - :func:`singleton_object <qalgebra.utils.singleton.singleton_object>`
         - Class decorator that transforms (and replaces) a class definition (which must have a Singleton metaclass) with the actual singleton object.
    

    ``__all__`` Data:


    .. list-table::
    
       * - :obj:`SingletonType <qalgebra.utils.singleton.SingletonType>`
         - A dummy type that for checking whether an object is a Singleton.
    


